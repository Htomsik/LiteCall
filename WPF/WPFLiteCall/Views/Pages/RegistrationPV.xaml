<UserControl
    mc:Ignorable="d"
    x:Class="LiteCall.Views.Pages.RegistrationPV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:boolean="clr-namespace:LiteCall.Infrastructure.Converters.Boolean"
    xmlns:converters="clr-namespace:LiteCall.Infrastructure.Converters"
    xmlns:customControls="clr-namespace:WPFCustomControls;assembly=WPFCustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:image="clr-namespace:LiteCall.Infrastructure.Converters.Image"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:null="clr-namespace:LiteCall.Infrastructure.Converters.Null"
    xmlns:validationRule="clr-namespace:LiteCall.Infrastructure.ValidationRule"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Grid Background="Transparent" MaxWidth="250">

        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border
            Background="{StaticResource Background2(Solid)}"
            CornerRadius="10"
            Grid.Row="0"
            MinWidth="200">
            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />

                </Grid.RowDefinitions>

                <TextBlock
                    HorizontalAlignment="Center"
                    Margin="5"
                    Style="{DynamicResource BigTextBlock}"
                    Text="REGISTRATION" />

                <TextBox
                    Grid.Row="1"
                    Margin="20,5"
                    Style="{StaticResource LogPassTextBox}"
                    Tag="USERNAME"
                    x:Name="UserNameTextBox">

                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="Login"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validationRule:UsernameValidator />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>


                </TextBox>

                <TextBox
                    Grid.Row="2"
                    Margin="20,5"
                    Style="{StaticResource PassTextBox}"
                    Tag="PASSWORD"
                    x:Name="PasswordTextBox">
                    <Binding
                        Mode="TwoWay"
                        Path="Password"
                        UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRule:PasswordValidator />
                        </Binding.ValidationRules>
                    </Binding>


                </TextBox>

                <TextBox
                    Grid.Row="3"
                    Margin="20,5"
                    Style="{StaticResource PassTextBox}"
                    Tag="PASSWORD CONFIRM"
                    Text="{Binding ConfirmPassword, UpdateSourceTrigger=PropertyChanged}"
                    x:Name="PasswordConfirmTextBox" />


                <ComboBox
                    Grid.Row="4"
                    IsEnabled="{Binding CanServerConnect, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding QuestionsCollection}"
                    Margin="20,5,1,5"
                    SelectedItem="{Binding SelectedQuestion}"
                    Tag="QUESTION"
                    x:Name="QuestionComboBox">

                    <ComboBox.ItemTemplate>

                        <DataTemplate>
                            <Grid>

                                <TextBlock Text="{Binding Text}" />
                            </Grid>
                        </DataTemplate>

                    </ComboBox.ItemTemplate>
                </ComboBox>


                <TextBox
                    Grid.Row="5"
                    Margin="20,5"
                    Style="{StaticResource PassTextBox}"
                    Tag="ANSWER"
                    x:Name="AnswerTextBox">
                    <TextBox.Text>
                        <Binding
                            Mode="OneWayToSource"
                            Path="QuestionAnswer"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validationRule:AnswerValidation />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>


                <!--  Переход на логин  -->
                <StackPanel
                    Grid.Row="6"
                    HorizontalAlignment="Center"
                    Margin="6"
                    Orientation="Horizontal"
                    VerticalAlignment="Top">

                    <TextBlock>
                        have account?
                    </TextBlock>

                    <TextBlock Margin="5,0,0,0">
                        Login
                        <TextBlock.Style>

                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">

                                <Setter Property="Foreground" Value="{DynamicResource Important(Solid)}" />

                                <Style.Triggers>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="TextDecorations" Value="UnderLine" />
                                    </Trigger>

                                </Style.Triggers>

                            </Style>
                        </TextBlock.Style>

                        <TextBlock.InputBindings>
                            <MouseBinding
                                Command="{Binding OpenAuthPageCommand}"
                                CommandParameter="2"
                                MouseAction="LeftClick" />
                        </TextBlock.InputBindings>

                    </TextBlock>

                </StackPanel>
            </Grid>

        </Border>

        <!--  Кнопка регистрации  -->

        <Button
            Command="{Binding OpenModalCommand}"
            Grid.Row="1"
            Margin="20,5"
            MaxHeight="40"
            MaxWidth="235">
            <TextBlock Style="{DynamicResource BigTextBlock}" Text="REGISTRATION" />

            <Button.Style>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">

                    <Setter Property="IsEnabled" Value="True" />

                    <Style.Triggers>
                        <MultiDataTrigger>

                            <MultiDataTrigger.Conditions>

                                <Condition Binding="{Binding ElementName=UserNameTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding ElementName=PasswordTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding ElementName=PasswordConfirmTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding ElementName=AnswerTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding SelectedQestion, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource NullToBoolInverter}}" Value="True" />

                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="False" />
                            </MultiDataTrigger.Setters>

                        </MultiDataTrigger>
                    </Style.Triggers>


                </Style>
            </Button.Style>
        </Button>

        <!--  IsOpen="{Binding ModalStatus, UpdateSourceTrigger=PropertyChanged}"  -->
        <customControls:ModalWindow
            BorderBrush="{DynamicResource Fonts(Solid)}"
            BorderThickness="1"
            Corner="10"
            Grid.Row="0"
            Grid.RowSpan="2"
            IsOpen="{Binding ModalStatus, UpdateSourceTrigger=PropertyChanged}">


            <Border Background="{DynamicResource Background2(Solid)}" CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=customControls:ModalWindow}, Path=Corner}">
                <Grid
                    ClipToBounds="True"
                    Margin="5"
                    MinHeight="200"
                    MinWidth="200">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.1*" />
                        <RowDefinition Height="0.3*" />
                        <RowDefinition Height="0.2*" />
                        <RowDefinition Height="0.2*" />
                        <RowDefinition Height="0.2*" />

                    </Grid.RowDefinitions>


                    <Border
                        BorderBrush="{DynamicResource Fonts(Solid)}"
                        BorderThickness="0.2"
                        CornerRadius="5"
                        Grid.Row="1"
                        Height="60"
                        Margin="5"
                        Width="120">
                        <Image Source="{Binding CaptchaBytes, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource ImageSourceConverter}}" Stretch="Fill" />
                    </Border>


                    <TextBox
                        Grid.Row="2"
                        Margin="20,8"
                        MaxLength="4"
                        Style="{StaticResource LogPassTextBox}"
                        Tag="Captcha"
                        x:Name="CaptchaTextBox">

                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="CaptchaString"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationRule:CaptchaValidation />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>

                    </TextBox>


                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button
                            BorderBrush="{DynamicResource Green(Solid)}"
                            Command="{Binding RegistrationCommand, UpdateSourceTrigger=PropertyChanged}"
                            Grid.Column="0"
                            HorizontalAlignment="Center"
                            Margin="5"
                            MaxHeight="40"
                            MaxWidth="125"
                            MinHeight="40"
                            MinWidth="75"
                            VerticalAlignment="Center">

                            <Button.Style>
                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=CaptchaTextBox, Path=(Validation.HasError)}" Value="False">
                                            <Setter Property="IsEnabled" Value="True" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>

                            <TextBlock Text="OK" />

                        </Button>

                        <Button
                            BorderBrush="{DynamicResource Dangerous(Solid)}"
                            Command="{Binding OpenModalCommand}"
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            Margin="5"
                            MaxHeight="40"
                            MaxWidth="125"
                            MinHeight="40"
                            MinWidth="75"
                            VerticalAlignment="Center">
                            <TextBlock Text="EXIT" />
                        </Button>
                    </Grid>

                </Grid>
            </Border>

        </customControls:ModalWindow>

        <Border
            Background="Black"
            CornerRadius="10"
            Grid.Row="0"
            Grid.RowSpan="2"
            Opacity="0.3"
            Visibility="{Binding CanServerConnect, Converter={StaticResource BooleanToVisibilityInverter}, UpdateSourceTrigger=PropertyChanged}" />


    </Grid>
</UserControl>
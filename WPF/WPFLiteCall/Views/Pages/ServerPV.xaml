<UserControl
    x:Class="LiteCall.Views.Pages.ServerPV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:LiteCall.Infrastructure.Converters"
    xmlns:customControls="clr-namespace:WPFCustomControls;assembly=WPFCustomControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:validationRule="clr-namespace:LiteCall.Infrastructure.ValidationRule"
    xmlns:boolean="clr-namespace:LiteCall.Infrastructure.Converters.Boolean"
    xmlns:null="clr-namespace:LiteCall.Infrastructure.Converters.Null"
    d:DesignHeight="450"
    d:DesignWidth="900"
    mc:Ignorable="d">


    <UserControl.Resources>

        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>

                <ResourceDictionary Source="../../Resources/Styles/Lists.xaml" />

            </ResourceDictionary.MergedDictionaries>

            <boolean:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            
            <boolean:BoolInverter x:Key="Boolinverter" />

            <boolean:BoolToVisibilityInverter x:Key="BooleanToVisibilityInverter" />

            <null:NullToVisibilityConverter x:Key="NullToVisibilityConverter" />

            <null:NullToBoolInverter x:Key="GroupNotNullBoolConverter" />

            <system:Double x:Key="SendMassegeButtonScale">1.0</system:Double>

            <system:Double x:Key="MicrophoneButtonscale">0.8</system:Double>


        </ResourceDictionary>

    </UserControl.Resources>


    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="70" />
            <ColumnDefinition Width="235" />
            <ColumnDefinition Width="*" MinWidth="50" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
            <RowDefinition Height="40" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>


        <!--  Список комнат на сервере  -->
        <Grid
            Grid.Row="1"
            Grid.Column="1"
            Background="{DynamicResource Background2(Solid)}">
            <Grid.RowDefinitions>
                <RowDefinition Height="45" MaxHeight="72" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--  Название сервера и кнопки взаимодействия  -->
            <Grid>

                <TextBlock
                    HorizontalAlignment="Center"
                    Style="{DynamicResource BigTextBlock}"
                    Text="{Binding CurrentServerStore.CurrentServer.Title}" />

                <Border
                    Height="1"
                    Margin="20,0"
                    VerticalAlignment="Bottom"
                    BorderBrush="{DynamicResource Fonts(Solid)}"
                    BorderThickness="1"
                    CornerRadius="5" />

            </Grid>

            <!--  Список комнат и пользователей  -->
            <ListView
                Grid.Row="1"
                Margin="0,5,0,0"
                HorizontalAlignment="Stretch"
                HorizontalContentAlignment="Stretch"
                ItemsSource="{Binding CurrentServerStore.CurrentServerRooms}"
                SelectedItem="{Binding SelRooms, UpdateSourceTrigger=PropertyChanged}">


                <ListView.ContextMenu>
                    <ContextMenu>

                        <MenuItem
                            Command="{Binding ConnectCommand}"
                            Header="Connect" />

                        <MenuItem
                            Command="{Binding OpenCreateRoomModalCommand}"
                            CommandParameter="1"
                            Header="Create new room" />

                        <MenuItem
                            Command="{Binding DisconnectGroupCommand}"
                            Header="Disconect from room"
                            IsEnabled="{Binding CurrentGroup, Converter={StaticResource GroupNotNullBoolConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" />

                        <MenuItem
                            Command="{Binding AdminDeleteRoomCommand}"
                            CommandParameter="{Binding SelRooms}"
                            Header="Delete Room" />


                        <MenuItem
                            Command="{Binding AdminDisconnectUserFromRoomCommand}"
                            CommandParameter="{Binding SelServerUser}"
                            Header="Disconnect selected user" />


                    </ContextMenu>
                </ListView.ContextMenu>

                <ListView.ItemTemplate>

                    <DataTemplate>
                        <Grid Margin="0,0,0,5">

                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Border
                                x:Name="RoomBorder"
                                MinWidth="200"
                                Margin="5,0"
                                BorderBrush="{DynamicResource Fonts(Solid)}"
                                BorderThickness="1"
                                CornerRadius="8">


                                <Grid>


                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Text="{Binding RoomName}" />

                                    <TextBlock
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        FontSize="18"
                                        Foreground="{DynamicResource Dangerous(Solid)}"
                                        Text="P"
                                        Visibility="{Binding WithPassword, Converter={StaticResource BooleanToVisibilityConverter}}" />


                                </Grid>

                                <Border.Style>
                                    <Style TargetType="{x:Type Border}">

                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource Button2(Solid)}" />
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>

                            </Border>


                            <ListView
                                Grid.Row="1"
                                Margin="0,5,0,0"
                                HorizontalContentAlignment="Stretch"
                                ItemsSource="{Binding Users}"
                                SelectedItem="{Binding DataContext.SelServerUser, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListView}}, UpdateSourceTrigger=PropertyChanged}">

                                <ListView.ItemTemplate>


                                    <DataTemplate>


                                        <Grid>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>

                                            <Path
                                                x:Name="UserPath"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                RenderTransformOrigin="0.5, 0.5"
                                                Style="{DynamicResource PersonPath}">
                                                <Path.RenderTransform>

                                                    <ScaleTransform CenterX="0" CenterY="0" ScaleX="1" ScaleY="1" />

                                                </Path.RenderTransform>
                                            </Path>

                                            <TextBlock
                                                x:Name="UserText"
                                                Grid.Column="1"
                                                Margin="5,0,0,0"
                                                Text="{Binding Login}" />


                                        </Grid>

                                        <DataTemplate.Triggers>

                                            <DataTrigger Binding="{Binding Role}" Value="You">
                                                <Setter TargetName="UserPath" Property="Fill"
                                                        Value="{DynamicResource Green(Solid)}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Role}" Value="Admin">
                                                <Setter TargetName="UserPath" Property="Fill"
                                                        Value="{DynamicResource Dangerous(Solid)}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Role}" Value="User">
                                                <Setter TargetName="UserPath" Property="Fill"
                                                        Value="{DynamicResource Blue(Solid)}" />
                                            </DataTrigger>

                                            <DataTrigger Binding="{Binding Role}" Value="Anonymous">
                                                <Setter TargetName="UserPath" Property="Fill"
                                                        Value="{DynamicResource Fonts(Solid)}" />
                                            </DataTrigger>


                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="UserPath" Property="Fill" Value="White" />
                                                <Setter TargetName="UserText" Property="Foreground" Value="White" />
                                            </Trigger>

                                        </DataTemplate.Triggers>


                                    </DataTemplate>
                                </ListView.ItemTemplate>


                            </ListView>
                        </Grid>


                    </DataTemplate>

                </ListView.ItemTemplate>


            </ListView>
        </Grid>

        <!--  Управление звуком  -->
        <StackPanel
            Grid.Row="2"
            Grid.Column="1"
            Background="{DynamicResource Background23(Solid)}"
            Orientation="Horizontal">

            <ToggleButton
                IsChecked="{Binding MicrophoneMute, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                IsEnabled="{Binding CurrentGroup, Converter={StaticResource GroupNotNullBoolConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                Style="{DynamicResource ImgToggleButton}">

                <ToggleButton.Resources>
                    <StaticResource x:Key="Img" ResourceKey="MicrophonePath" />
                    <StaticResource x:Key="Img2" ResourceKey="MicrophoneMutePath" />
                    <StaticResource x:Key="Scale" ResourceKey="MicrophoneButtonscale" />
                </ToggleButton.Resources>

            </ToggleButton>

            <ToggleButton
                IsChecked="{Binding HeadphoneMute, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                IsEnabled="{Binding CurrentGroup, Converter={StaticResource GroupNotNullBoolConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                Style="{DynamicResource ImgToggleButton}">

                <ToggleButton.Resources>
                    <StaticResource x:Key="Img" ResourceKey="HeadphonePath" />
                    <StaticResource x:Key="Img2" ResourceKey="HeadphoneMutePath" />
                    <StaticResource x:Key="Scale" ResourceKey="MicrophoneButtonscale" />
                </ToggleButton.Resources>

            </ToggleButton>
        </StackPanel>

        <!--  Блок информации + сообщений  -->
        <Grid
            Grid.Row="0"
            Background="{DynamicResource Background4(Solid)}"
            Column="2"
            RowSpan="4">

            <Grid Grid.Row="1">

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.3*" MaxHeight="140" />
                    <RowDefinition Height="0.6*" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>

                <!--  Информация о сервере  -->
                <Grid Background="{DynamicResource Background7(Solid)}">


                    <!--  Что все тб были одинаковы  -->
                    <Grid.Resources>

                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">

                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Margin" Value="5" />
                            <Setter Property="FontSize" Value="16" />

                        </Style>

                    </Grid.Resources>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel
                        Grid.Row="1"
                        Margin="5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                        <!--  Ip  -->
                        <StackPanel Orientation="Horizontal">

                            <TextBlock Text="IP:" />
                            <TextBlock Text="{Binding CurrentServerStore.CurrentServer.Ip}" />

                        </StackPanel>

                        <!--  County  -->
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding CurrentServerStore.CurrentServer.Country, Converter={StaticResource NullToVisibilityConverter}}">

                            <TextBlock Text="Country:" />
                            <TextBlock Text="{Binding CurrentServerStore.CurrentServer.Country}" />

                        </StackPanel>

                        <!--  City  -->
                        <StackPanel Orientation="Horizontal"
                                    Visibility="{Binding CurrentServerStore.CurrentServer.City, Converter={StaticResource NullToVisibilityConverter}}">

                            <TextBlock Text="City:" />
                            <TextBlock Text="{Binding CurrentServerStore.CurrentServer.City}" />

                        </StackPanel>

                    </StackPanel>


                    <!--  Перегородка  -->
                    <Border
                        Grid.RowSpan="4"
                        Margin="5,5,0,5"
                        HorizontalAlignment="Right"
                        BorderBrush="{DynamicResource Fonts(Solid)}"
                        BorderThickness="1"
                        CornerRadius="5" />


                    <!--  Description  -->
                    <Grid
                        Column="2"
                        Row="0"
                        RowSpan="4">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="0.8*" />
                        </Grid.RowDefinitions>

                        <TextBlock
                            HorizontalAlignment="Center"
                            FontSize="18"
                            Text="Description" />

                        <TextBlock
                            Grid.Row="1"
                            HorizontalAlignment="Center"
                            FontSize="18"
                            Text="{Binding CurrentServerStore.CurrentServer.Description}"
                            TextWrapping="Wrap" />

                        <Border
                            Height="2"
                            Margin="20,0"
                            VerticalAlignment="Bottom"
                            BorderBrush="{DynamicResource Fonts(Solid)}"
                            BorderThickness="1"
                            CornerRadius="5" />

                    </Grid>
                </Grid>


                <!--  Сообщеия  -->
                <Border Grid.Row="1" Background="{DynamicResource Background6(Solid)}">

                    <ListView ItemContainerStyle="{DynamicResource MessageListItems}"
                              ItemsSource="{Binding MessagesColCollection, UpdateSourceTrigger=PropertyChanged}">

                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel VerticalAlignment="Bottom" />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>


                        <ListView.ItemTemplate>

                            <DataTemplate>

                                <VirtualizingStackPanel
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Bottom"
                                    Background="Transparent"
                                    Orientation="Horizontal">

                                    <TextBlock Margin="0,0,2,0" Text="{Binding DateSend, StringFormat=HH:mm}" />

                                    <TextBlock Margin="0,0,2,0" Text="{Binding Sender}" />

                                    <TextBlock Text="{Binding Text, StringFormat=: {0}}" />

                                </VirtualizingStackPanel>


                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </Border>

                <!--  Отправка сообщений  -->
                <Grid Row="2">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />

                    </Grid.ColumnDefinitions>

                    <Button
                        Grid.Column="1"
                        Margin="5"
                        HorizontalAlignment="Left"
                        Command="{Binding SendMessageCommand}"
                        Style="{DynamicResource ImgButton}">
                        <Button.Resources>
                            <StaticResource x:Key="Img" ResourceKey="PointerPath" />
                            <StaticResource x:Key="Scale" ResourceKey="SendMassegeButtonScale" />
                        </Button.Resources>

                    </Button>


                    <Border
                        Grid.Column="0"
                        Margin="5,5"
                        Background="{DynamicResource Background4(Solid)}"
                        BorderBrush="{DynamicResource Background6(Solid)}"
                        BorderThickness="1"
                        CornerRadius="10">

                        <TextBox
                            Margin="5,0"
                            HorizontalContentAlignment="Right"
                            VerticalContentAlignment="Center"
                            FlowDirection="LeftToRight"
                            IsEnabled="{Binding CurrentGroup, Converter={StaticResource GroupNotNullBoolConverter}, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                            MaxLength="100"
                            Text="{Binding CurrentMessage, UpdateSourceTrigger=PropertyChanged}" />
                    </Border>
                </Grid>


            </Grid>

        </Grid>

        <!--
            IsOpen="{Binding CreateRoomModalStatus, UpdateSourceTrigger=PropertyChanged}"
        -->
        <!--  Окно создания комнаты  -->
        <customControls:ModalWindow
            Grid.Row="0"
            Grid.RowSpan="4"
            Grid.ColumnSpan="3"
            BorderBrush="{DynamicResource Fonts(Solid)}"
            BorderThickness="1"
            Corner="10"
            IsOpen="{Binding CreateRoomModalStatus, UpdateSourceTrigger=PropertyChanged}">

            <Border
                MinWidth="250"
                MinHeight="250"
                Background="{DynamicResource Background2(Solid)}"
                CornerRadius="10">
                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock
                        HorizontalAlignment="Center"
                        Style="{DynamicResource BigTextBlock}"
                        Text="CREATE ROOM" />


                    <TextBox
                        x:Name="RoomNameTb"
                        Grid.Row="1"
                        Margin="20,8"
                        MaxLength="15"
                        Style="{StaticResource LogPassTextBox}"
                        Tag="ROOM NAME">

                        <TextBox.Text>

                            <Binding
                                Mode="TwoWay"
                                Path="NewRoomName"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.ValidationRules>
                                    <validationRule:RoomNameValidation />
                                </Binding.ValidationRules>

                            </Binding>

                        </TextBox.Text>

                    </TextBox>

                    <TextBox
                        Grid.Row="2"
                        Margin="20,8"
                        MaxLength="15"
                        Style="{StaticResource LogPassTextBox}"
                        Tag="PASSWORD">

                        <TextBox.Text>

                            <Binding
                                Mode="TwoWay"
                                Path="NewRoomPassword"
                                UpdateSourceTrigger="PropertyChanged" />

                        </TextBox.Text>

                    </TextBox>


                    <Grid Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button
                            IsEnabled="{Binding ElementName=RoomNameTb, Path=(Validation.HasError), Converter={StaticResource Boolinverter}}"
                            MaxWidth="125"
                            MaxHeight="40"
                            Margin="15"
                            BorderBrush="{DynamicResource Green(Solid)}"
                            Command="{Binding CreateNewRoomCommand}">
                            <TextBlock Text="OK" />
                            
                        </Button>

                        <Button
                            Grid.Column="1"
                            MaxWidth="125"
                            MaxHeight="40"
                            Margin="15"
                            BorderBrush="{DynamicResource Dangerous(Solid)}"
                            Command="{Binding OpenCreateRoomModalCommand}"
                            CommandParameter="0">
                            <TextBlock Text="EXIT" />
                        </Button>

                    </Grid>


                </Grid>
            </Border>

        </customControls:ModalWindow>

        <!--  IsOpen="{Binding RoomPasswordModalStatus, UpdateSourceTrigger=PropertyChanged}"  -->
        <!--  Окно ввода пароля комнаты  -->
        <customControls:ModalWindow
            Grid.RowSpan="4"
            Grid.ColumnSpan="3"
            BorderBrush="{DynamicResource Fonts(Solid)}"
            BorderThickness="1"
            Corner="10"
            IsOpen="{Binding RoomPasswordModalStatus, UpdateSourceTrigger=PropertyChanged}">

            <Border
                MinWidth="250"
                MinHeight="200"
                Background="{DynamicResource Background2(Solid)}"
                CornerRadius="10">
                <Grid>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock
                        HorizontalAlignment="Center"
                        Style="{DynamicResource BigTextBlock}"
                        Text="Password" />


                    <TextBox
                        x:Name="RoomPasswordTb"
                        Grid.Row="1"
                        Margin="20,8"
                        MaxLength="15"
                        Style="{StaticResource LogPassTextBox}"
                        Tag="PASSWORD">

                        <TextBox.Text>

                            <Binding
                                Mode="TwoWay"
                                Path="RoomPassword"
                                UpdateSourceTrigger="PropertyChanged">

                                <Binding.ValidationRules>
                                    <validationRule:RoomPasswordValidator />
                                </Binding.ValidationRules>

                            </Binding>
                        </TextBox.Text>

                    </TextBox>

                    <Grid Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button
                            IsEnabled="{Binding ElementName=RoomPasswordTb, Path=(Validation.HasError), Converter={StaticResource  Boolinverter}}"
                            MaxWidth="125"
                            MaxHeight="40"
                            Margin="15"
                            BorderBrush="{DynamicResource Green(Solid)}"
                            Command="{Binding ConnectWithPasswordCommand}">
                            <TextBlock Text="OK" />
                            
                        </Button>

                        <Button
                            Grid.Column="1"
                            MaxWidth="125"
                            MaxHeight="40"
                            Margin="15"
                            BorderBrush="{DynamicResource Dangerous(Solid)}"
                            Command="{Binding OpenPasswordModalCommand}"
                            CommandParameter="0">
                            <TextBlock Text="EXIT" />
                        </Button>
                    </Grid>


                </Grid>
            </Border>


        </customControls:ModalWindow>

        <Border
            Grid.RowSpan="3"
            Grid.Column="1"
            Grid.ColumnSpan="2"
            Background="Black"
            Opacity="0.3"
            Visibility="{Binding CanServerConnect, Converter={StaticResource BooleanToVisibilityInverter}, UpdateSourceTrigger=PropertyChanged}" />

        <Border
            Grid.Row="3"
            Grid.Column="2"
            Background="Black"
            Opacity="0.3"
            Visibility="{Binding CanServerConnect, Converter={StaticResource BooleanToVisibilityInverter}, UpdateSourceTrigger=PropertyChanged}" />


    </Grid>
</UserControl>
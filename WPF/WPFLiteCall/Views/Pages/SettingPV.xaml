<UserControl
    d:DesignHeight="450"
    d:DesignWidth="450"
    mc:Ignorable="d"
    x:Class="LiteCall.Views.Pages.SettingPV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:accountManagement="clr-namespace:Core.VMD.Pages.AccountManagement;assembly=Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:LiteCall.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:validationRule="clr-namespace:LiteCall.Infrastructure.ValidationRule"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <UserControl.Resources>
        <ResourceDictionary>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/Styles/TabIControl.xaml" />
                <ResourceDictionary Source="../../Resources/Styles/Lists.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid
        Background="{DynamicResource Background(Solid)}"
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch">


        <TabControl
            BorderThickness="0"
            Grid.Row="0"
            TabStripPlacement="Left">

            <!--  Аккаунт  -->
            <TabItem
                Background="{DynamicResource Background(Solid)}"
                Margin="0"
                Padding="0">


                <TabItem.Header>
                    <TextBlock Text="Account" />
                </TabItem.Header>

                <TabItem.Content>

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Current account: " />
                                <TextBlock Text="{Binding AccountStore.CurrentValue.Login}" />
                            </StackPanel>

                            <!--  Тип аккаунта  -->
                            <StackPanel Orientation="Horizontal">

                                <TextBlock Text="Account type: " />

                                <TextBlock Text="{Binding AccountStore.CurrentValue.IsAuthorized, Converter={StaticResource IsAuthorizeBoolToStringConverter}, UpdateSourceTrigger=PropertyChanged}">

                                    <TextBlock.Style>

                                        <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">


                                            <Setter Property="Foreground" Value="{DynamicResource Dangerous(Solid)}" />

                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="Authorized">

                                                    <Setter Property="Foreground" Value="{DynamicResource Green(Solid)}" />

                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                    </TextBlock.Style>

                                </TextBlock>

                                <TextBlock
                                    Foreground="{DynamicResource Dangerous(Solid)}"
                                    Margin="5,0,0,0"
                                    Text="Default"
                                    Visibility="{Binding IsDefault, Converter={StaticResource BooleanToVisibilityConverter}}" />


                            </StackPanel>

                        </StackPanel>

                        <!--  Кнопка выхода из аккаунта  -->
                        <Button
                            Command="{Binding LogoutAccCommand}"
                            Grid.Row="1"
                            HorizontalAlignment="Left"
                            Margin="5"
                            Padding="3">

                            <Button.Style>

                                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">


                                    <Setter Property="Visibility" Value="Collapsed" />

                                    <Style.Triggers>

                                        <DataTrigger Binding="{Binding AccountStore.CurrentValue.IsAuthorized}" Value="True">

                                            <Setter Property="Visibility" Value="Visible" />

                                        </DataTrigger>

                                        <MultiDataTrigger>

                                            <MultiDataTrigger.Conditions>

                                                <Condition Binding="{Binding IsDefault}" Value="False" />

                                                <Condition Binding="{Binding AccountStore.CurrentValue.IsAuthorized}" Value="True" />
                                            </MultiDataTrigger.Conditions>

                                            <Setter Property="Visibility" Value="Visible" />

                                        </MultiDataTrigger>

                                    </Style.Triggers>
                                </Style>

                            </Button.Style>
                            <TextBlock Text="Logout" />

                        </Button>


                        <ContentControl
                            Content="{Binding AccountCurrentVmd, UpdateSourceTrigger=PropertyChanged}"
                            Grid.Row="2"
                            HorizontalAlignment="Stretch"
                            Margin="5"
                            VerticalAlignment="Top">

                            <ContentControl.Resources>

                                <DataTemplate DataType="{x:Type accountManagement:AuthorizationPageVmd}">
                                    <local:AuthorisationPV />
                                </DataTemplate>

                                <DataTemplate DataType="{x:Type accountManagement:RegistrationPageVmd}">
                                    <local:RegistrationPV />
                                </DataTemplate>

                                <DataTemplate DataType="{x:Type accountManagement:PasswordRecoveryVmd}">
                                    <local:PasswordRecoveryPV />
                                </DataTemplate>

                            </ContentControl.Resources>


                        </ContentControl>

                    </Grid>


                </TabItem.Content>

            </TabItem>


            <TabItem
                Background="{DynamicResource Background(Solid)}"
                Margin="0"
                Padding="0">


                <TabItem.Header>

                    <TextBlock Text="Servers" />

                </TabItem.Header>

                <TabItem.Content>

                    <Grid
                        HorizontalAlignment="Stretch"
                        Margin="5"
                        VerticalAlignment="Stretch">

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition MinWidth="200" Width="*" />
                        </Grid.ColumnDefinitions>


                        <!--  Список сохраненных серверов  -->

                        <Border
                            Background="{DynamicResource Background23(Solid)}"
                            CornerRadius="10"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Top">

                            <ListView ItemsSource="{Binding SavedServersStore.SavedServerAccounts.ServersAccounts, UpdateSourceTrigger=PropertyChanged}" x:Name="ServesListView">

                                <ListView.ItemTemplate>

                                    <DataTemplate>

                                        <Border x:Name="Border">

                                            <StackPanel Background="Transparent" Orientation="Vertical">

                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Foreground="{DynamicResource Important(Solid)}" Text="Ip: " />
                                                    <TextBlock Text="{Binding SavedServer.ApiIp}" />
                                                </StackPanel>

                                                <StackPanel Orientation="Horizontal">

                                                    <TextBlock Foreground="{DynamicResource Important(Solid)}" Text="Nickname: " />

                                                    <TextBlock Text="{Binding Account.Login}" />

                                                    <TextBlock
                                                        FontSize="15"
                                                        Foreground="{DynamicResource Dangerous(Solid)}"
                                                        Text="[NA]"
                                                        VerticalAlignment="Top"
                                                        Visibility="{Binding Account.IsAuthorized, Converter={StaticResource BooleanToVisibilityInverter}}" />

                                                </StackPanel>

                                            </StackPanel>

                                        </Border>

                                        <DataTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource Button2(Solid)}" />
                                            </Trigger>
                                        </DataTemplate.Triggers>


                                    </DataTemplate>
                                </ListView.ItemTemplate>

                            </ListView>
                        </Border>


                        <Grid
                            Background="Transparent"
                            Grid.Column="1"
                            HorizontalAlignment="Left"
                            Margin="15"
                            MinHeight="200"
                            MinWidth="200"
                            VerticalAlignment="Top">


                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Border Background="{StaticResource Background2(Solid)}" CornerRadius="10">

                                <Grid>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />
                                        <RowDefinition Height="1*" />

                                    </Grid.RowDefinitions>

                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        Margin="5,10,0,0"
                                        Style="{DynamicResource BigTextBlock}"
                                        Text="ACCOUNT" />


                                    <TextBox
                                        Grid.Row="1"
                                        Margin="20,8"
                                        Style="{StaticResource LogPassTextBox}"
                                        Tag="SERVER IP"
                                        x:Name="Ip">

                                        <Binding Path="NewServerApiIp" UpdateSourceTrigger="PropertyChanged">

                                            <Binding.ValidationRules>
                                                <validationRule:IpValidation />
                                            </Binding.ValidationRules>

                                        </Binding>

                                    </TextBox>

                                    <TextBox
                                        Grid.Row="2"
                                        Margin="20,8"
                                        Style="{StaticResource LogPassTextBox}"
                                        Tag="LOGIN"
                                        x:Name="Login">

                                        <TextBox.Text>
                                            <Binding Path="NewSeverLogin" UpdateSourceTrigger="PropertyChanged">

                                                <Binding.ValidationRules>
                                                    <validationRule:UsernameValidator />
                                                </Binding.ValidationRules>

                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>


                                </Grid>

                            </Border>

                            <Button
                                Command="{Binding AddNewServerCommand}"
                                Grid.Row="1"
                                Margin="15"
                                MaxHeight="40"
                                MaxWidth="235"
                                x:Name="Button">

                                <TextBlock Style="{DynamicResource BigTextBlock}" Text="Add" />


                                <Button.Style>

                                    <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                                        <Style.Triggers>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=Ip, Path=(Validation.HasError)}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=Login, Path=(Validation.HasError)}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.Setters>
                                                    <Setter Property="IsEnabled" Value="False" />
                                                </MultiDataTrigger.Setters>
                                            </MultiDataTrigger>

                                        </Style.Triggers>

                                    </Style>

                                </Button.Style>


                            </Button>


                        </Grid>


                    </Grid>


                </TabItem.Content>


            </TabItem>

            <TabItem
                Background="{DynamicResource Background(Solid)}"
                Margin="0"
                Padding="0">


                <TabItem.Header>

                    <TextBlock Text="Audio" />

                </TabItem.Header>

                <TabItem.Content>
                    <Grid
                        HorizontalAlignment="Left"
                        Margin="5"
                        MinWidth="200"
                        VerticalAlignment="Top">

                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <StackPanel>
                            <TextBlock Text="Input device:" />
                            <ComboBox
                                ItemsSource="{Binding InputDevices, UpdateSourceTrigger=PropertyChanged}"
                                SelectedIndex="{Binding CaptureDeviceId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                Tag="Default" />
                        </StackPanel>


                        <StackPanel Grid.Row="1">
                            <TextBlock Text="Output device:" />
                            <ComboBox
                                ItemsSource="{Binding OutputDevices, UpdateSourceTrigger=PropertyChanged}"
                                SelectedIndex="{Binding OutputDeviceId, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                Tag="Default" />
                        </StackPanel>

                    </Grid>
                </TabItem.Content>


            </TabItem>

            <TabItem
                Background="{DynamicResource Background(Solid)}"
                Margin="0"
                Padding="0">

                <TabItem.Header>

                    <TextBlock Text="About progam" />

                </TabItem.Header>

                <TabItem.Content>
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">

                        <Border>

                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>

                                <Image
                                    Margin="2"
                                    Source="\Resources/Assets/Icons/AppIcon.png"
                                    Stretch="Uniform"
                                    Width="150" />

                                <StackPanel Grid.Row="1">

                                    <TextBlock>Мессенджер &quot;WPFLiteCall&quot;</TextBlock>

                                    <TextBlock>Год выпуска 2022</TextBlock>

                                </StackPanel>


                                <StackPanel Grid.Row="2" Margin="0,5,0,0">

                                    <TextBlock>Авторы:</TextBlock>


                                    <StackPanel Orientation="Horizontal">

                                        <TextBlock FontSize="14" Foreground="{DynamicResource Important(Solid)}">Клиент:</TextBlock>

                                        <TextBlock>Несутулов К.С</TextBlock>

                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontSize="14" Foreground="{DynamicResource Important(Solid)}">Сервера:</TextBlock>
                                        <TextBlock>Краснов А.А</TextBlock>
                                    </StackPanel>

                                </StackPanel>
                            </Grid>
                        </Border>
                    </Grid>
                </TabItem.Content>


            </TabItem>
        </TabControl>


    </Grid>


</UserControl>
<UserControl
    x:Class="LiteCall.Views.Pages.RegistrationPV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:LiteCall.Infrastructure.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:loadingCustom="clr-namespace:LoadingCustom;assembly=LoadingCustom"
    xmlns:local="clr-namespace:LiteCall.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:modalCutom="clr-namespace:ModalCutom;assembly=ModalCutom"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:validationRule="clr-namespace:LiteCall.Infrastructure.ValidationRule"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <converters:BooleanToVisibilityInverter x:Key="BooleanToVisibilityInverter" />
            <converters:GroupNotNullBoolConverter x:Key="GroupNotNullBoolConverter" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid MaxWidth="250" Background="Transparent">

        <Grid.RowDefinitions>
            <RowDefinition Height="1*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Border
            Grid.Row="0"
            MinWidth="200"
            Background="{StaticResource Background2(Solid)}"
            CornerRadius="10">
            <Grid>

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />
                    <RowDefinition Height="0.2*" />

                </Grid.RowDefinitions>

                <TextBlock
                    Margin="5"
                    HorizontalAlignment="Center"
                    Style="{DynamicResource BigTextBlock}"
                    Text="REGISTRATION" />

                <TextBox
                    x:Name="UserNameTextBox"
                    Grid.Row="1"
                    Margin="20,5"
                    Style="{StaticResource LogPassTextBox}"
                    Tag="USERNAME">

                    <TextBox.Text>
                        <Binding
                            Mode="TwoWay"
                            Path="Login"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validationRule:UsernameValidator />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>


                </TextBox>

                <TextBox
                    x:Name="PasswordTextBox"
                    Grid.Row="2"
                    Margin="20,5"
                    Style="{StaticResource PassTextBox}"
                    Tag="PASSWORD">
                    <Binding
                        Mode="TwoWay"
                        Path="Password"
                        UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <validationRule:PasswordValidator />
                        </Binding.ValidationRules>
                    </Binding>


                </TextBox>

                <TextBox
                    x:Name="PasswordConfirmTextBox"
                    Grid.Row="3"
                    Margin="20,5"
                    Style="{StaticResource PassTextBox}"
                    Tag="PASSWORD CONFIRM"
                    Text="{Binding ConfirmPassword, UpdateSourceTrigger=PropertyChanged}" />


                <ComboBox
                    x:Name="QuestionCB"
                    Grid.Row="4"
                    Margin="20,5,1,5"
                    IsEnabled="{Binding CanServerConnect, UpdateSourceTrigger=PropertyChanged}"
                    ItemsSource="{Binding QuestionsCollection}"
                    SelectedItem="{Binding SelectedQuestion}"
                    Tag="QUESTION">

                    <ComboBox.ItemTemplate>

                        <DataTemplate>
                            <Grid>

                                <TextBlock Text="{Binding Text}" />
                            </Grid>
                        </DataTemplate>

                    </ComboBox.ItemTemplate>
                </ComboBox>


                <TextBox
                    x:Name="AnswerTextBox"
                    Grid.Row="5"
                    Margin="20,5"
                    Style="{StaticResource PassTextBox}"
                    Tag="ANSWER">
                    <TextBox.Text>
                        <Binding
                            Mode="OneWayToSource"
                            Path="QuestionAnswer"
                            UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validationRule:AnswerValidation />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                </TextBox>


                <!--  Переход на логин  -->
                <StackPanel
                    Grid.Row="6"
                    Margin="6"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">

                    <TextBlock>
                        have account?
                    </TextBlock>

                    <TextBlock Margin="5,0,0,0">
                        Login
                        <TextBlock.Style>

                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">

                                <Setter Property="Foreground" Value="{DynamicResource Important(Solid)}" />

                                <Style.Triggers>

                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="TextDecorations" Value="UnderLine" />
                                    </Trigger>

                                </Style.Triggers>

                            </Style>
                        </TextBlock.Style>

                        <TextBlock.InputBindings>
                            <MouseBinding
                                Command="{Binding OpenAuthPageCommand}"
                                CommandParameter="2"
                                MouseAction="LeftClick" />
                        </TextBlock.InputBindings>

                    </TextBlock>

                </StackPanel>
            </Grid>

        </Border>

        <!--  Кнопка регистрации  -->

        <Button
            Grid.Row="1"
            MaxWidth="235"
            MaxHeight="40"
            Margin="20,5"
            Command="{Binding OpenModalCommand}">
            <TextBlock Style="{DynamicResource BigTextBlock}" Text="REGISTRATION" />

            <!-- <Button.CommandParameter>
                    <MultiBinding Converter="{StaticResource LoginPassValidatConverter}">
                        <Binding ElementName="UsernameTB" Path="(Validation.HasError)" />
                        <Binding ElementName="PasswordTB" Path="(Validation.HasError)" />
                    </MultiBinding>
                </Button.CommandParameter>-->


            <Button.Style>
                <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">

                    <Setter Property="IsEnabled" Value="True" />

                    <Style.Triggers>
                        <MultiDataTrigger>

                            <MultiDataTrigger.Conditions>

                                <Condition Binding="{Binding ElementName=UserNameTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding ElementName=PasswordTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding ElementName=PasswordConfirmTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding ElementName=AnswerTextBox, Path=(Validation.HasError)}" Value="True" />

                                <Condition Binding="{Binding SelectedQestion, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource GroupNotNullBoolConverter}}" Value="True" />

                            </MultiDataTrigger.Conditions>

                            <MultiDataTrigger.Setters>
                                <Setter Property="IsEnabled" Value="False" />
                            </MultiDataTrigger.Setters>

                        </MultiDataTrigger>
                    </Style.Triggers>


                </Style>
            </Button.Style>
        </Button>

        <!--  IsOpen="{Binding ModalStatus, UpdateSourceTrigger=PropertyChanged}"  -->
        <modalCutom:ModalCustom
            Grid.RowSpan="4"
            BorderBrush="{DynamicResource Fonts(Solid)}"
            BorderThickness="1"
            Corner="10"
            IsOpen="{Binding ModalStatus, UpdateSourceTrigger=PropertyChanged}">


            <Border Background="{DynamicResource Background2(Solid)}" CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=modalCutom:ModalCustom}, Path=Corner}">
                <Grid
                    MinWidth="200"
                    MinHeight="200"
                    Margin="5"
                    ClipToBounds="True">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.1*" />
                        <RowDefinition Height="0.3*" />
                        <RowDefinition Height="0.2*" />
                        <RowDefinition Height="0.2*" />
                        <RowDefinition Height="0.2*" />

                    </Grid.RowDefinitions>



                    <Border
                        Grid.Row="1"
                        Width="120"
                        Height="60"
                        Margin="5"
                        BorderBrush="{DynamicResource Fonts(Solid)}"
                        BorderThickness="0.2"
                        CornerRadius="5">
                        <Image Source="{Binding CaptсhaImageSource, UpdateSourceTrigger=PropertyChanged}" Stretch="Fill" />
                    </Border>


                    <TextBox
                        x:Name="CapthcaTB"
                        Grid.Row="2"
                        Margin="20,8"
                        MaxLength="4"
                        Style="{StaticResource LogPassTextBox}"
                        Tag="Captcha">

                        <TextBox.Text>
                            <Binding
                                Mode="TwoWay"
                                Path="CaptchaString"
                                UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validationRule:CaptchaValidation />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>

                    </TextBox>


                    <Grid Grid.Row="3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Button
                            Grid.Column="0"
                            MinWidth="75"
                            MinHeight="40"
                            MaxWidth="125"
                            MaxHeight="40"
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="{DynamicResource Green(Solid)}"
                            Command="{Binding RegistrationCommand, UpdateSourceTrigger=PropertyChanged}">

                            <Button.CommandParameter>
                                <Binding ElementName="CapthcaTB" Path="(Validation.HasError)" />
                            </Button.CommandParameter>

                            <TextBlock Text="OK" />

                        </Button>

                        <Button
                            Grid.Column="1"
                            MinWidth="75"
                            MinHeight="40"
                            MaxWidth="125"
                            MaxHeight="40"
                            Margin="5"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            BorderBrush="{DynamicResource Dangerous(Solid)}"
                            Command="{Binding OpenModalCommand}">
                            <TextBlock Text="EXIT" />
                        </Button>
                    </Grid>



                    <!--  Показывает статус загрузки  -->
                    <loadingCustom:LoadingCustom
                        Grid.Row="4"
                        Margin="5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Top"
                        Diameter="30"
                        IsLoading="{Binding ModalHasStatusMessage}"
                        MainText="{Binding ModalStatusMessage}"
                        Color="{DynamicResource Fonts(Solid)}" />






                </Grid>
            </Border>

        </modalCutom:ModalCustom>

        <Border
            Grid.RowSpan="2"
            Background="Black"
            CornerRadius="10"
            Opacity="0.3"
            Visibility="{Binding CanServerConnect, Converter={StaticResource BooleanToVisibilityInverter}, UpdateSourceTrigger=PropertyChanged}" />


    </Grid>
</UserControl>

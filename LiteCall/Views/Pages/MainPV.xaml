<UserControl
    x:Class="LiteCall.Views.Pages.MainPV"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:LiteCall.Infrastructure.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:loadingCustom="clr-namespace:LoadingCustom;assembly=LoadingCustom"
    xmlns:local="clr-namespace:LiteCall.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:modalCutom="clr-namespace:ModalCutom;assembly=ModalCutom"
    xmlns:pages="clr-namespace:LiteCall.Views.Pages"
    xmlns:system="clr-namespace:System;assembly=System.Runtime"
    xmlns:viewModel="clr-namespace:LiteCall.ViewModels.ServerPages"
    d:DesignHeight="450"
    d:DesignWidth="400"
    mc:Ignorable="d">



    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../Resources/Styles/Lists.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:VisibilityConverter x:Key="VisibilityConverter" />

            <converters:AutVisConverter x:Key="NonAuthVisibilityConverter" />

            <converters:BooleanToVisibilityInverter x:Key="BooleanToVisibilityInverter" />

            <converters:IsCurrentServerNullConveter x:Key="IsCurrentServerNullConveter" />

            <system:Double x:Key="PlusScale">1</system:Double>

            <system:String x:Key="tittleOrIpText">SERVER NAME OR IP</system:String>

        </ResourceDictionary>
    </UserControl.Resources>


    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="70" />
            <ColumnDefinition Width="235" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>

        <Grid
            Background="{DynamicResource Background4(Solid)}"
            Column="1"
            ColumnSpan="2">

            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Path
                Grid.Row="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Style="{DynamicResource Sun}">
                <Path.RenderTransform>

                    <ScaleTransform CenterX="12" CenterY="12" ScaleX="9" ScaleY="9" />

                </Path.RenderTransform>
            </Path>

        </Grid>

        <!--  Меню серверов  -->
        <Grid Background="{StaticResource Background(Solid)}">

            <Grid.RowDefinitions>
                <RowDefinition Height="73" />
                <RowDefinition />
            </Grid.RowDefinitions>


            <ListView
                Grid.Row="1"
                ItemsSource="{Binding ServersAccountsStore.SavedServerAccounts}"
                SelectedItem="{Binding SelectedServerAccount}">

                <ListView.ContextMenu>

                    <ContextMenu>

                        <MenuItem Command="{Binding ConnectServerSavedCommand}" Header="Connect" />

                        <MenuItem Command="{Binding DeleteServerSavedCommand}" Header="Delete" />

                    </ContextMenu>

                </ListView.ContextMenu>

                <ListView.ItemTemplate>

                    <DataTemplate>

                        <Border
                            x:Name="Border"
                            Width="45"
                            Height="45"
                            Background="Transparent"
                            BorderBrush="{DynamicResource Fonts(Solid)}"
                            BorderThickness="1"
                            CornerRadius="22"
                            ToolTipService.InitialShowDelay="0">
                            <Border.ToolTip>
                                <ToolTip Placement="Right">

                                    <StackPanel>

                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Foreground="{DynamicResource Important(Solid)}" Text="Ip: " />
                                            <TextBlock Text="{Binding SavedServer.Ip}" />
                                        </StackPanel>

                                        <StackPanel Orientation="Horizontal">

                                            <TextBlock Foreground="{DynamicResource Important(Solid)}" Text="Nickname: " />

                                            <TextBlock Text="{Binding Account.Login}" />

                                            <TextBlock
                                                VerticalAlignment="Top"
                                                FontSize="15"
                                                Foreground="{DynamicResource Dangerous(Solid)}"
                                                Text="[NA]"
                                                Visibility="{Binding Account.IsAuthorise, Converter={StaticResource BooleanToVisibilityInverter}}" />

                                        </StackPanel>

                                    </StackPanel>

                                </ToolTip>
                            </Border.ToolTip>

                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Foreground="White"
                                Text="{Binding SavedServer.Title[0]}" />



                        </Border>

                        <DataTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource Button2(Solid)}" />
                            </Trigger>
                        </DataTemplate.Triggers>


                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <Border
                Width="45"
                Height="45"
                Background="Transparent"
                BorderBrush="{StaticResource Important(Solid)}"
                BorderThickness="1"
                CornerRadius="25"
                Visibility="{Binding VisibilitiStatus, UpdateSourceTrigger=PropertyChanged}">

                <TextBlock
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="20"
                    Foreground="{DynamicResource Important(Solid)}"
                    Text="{Binding CurrentServerStore.CurrentServer.Title[0]}" />

                <Border.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding DisconnectServerCommand}" Header="Server Disconnect" />

                        <MenuItem Command="{Binding SaveServerCommand}" Header="Save Server" />

                        <MenuItem Command="{Binding ModalRegistrationOpenCommand}" Header="Authorisation in current server" />
                    </ContextMenu>
                </Border.ContextMenu>

            </Border>

            <Button
                Width="35"
                Height="35"
                Command="{Binding OpenModalCommaCommand}"
                CommandParameter="1"
                Style="{StaticResource IMGButton}"
                Visibility="{Binding VisibilitiStatus, Converter={StaticResource VisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
                <Button.Resources>
                    <StaticResource x:Key="Img" ResourceKey="PlusPath" />
                    <StaticResource x:Key="Scale" ResourceKey="PlusScale" />
                </Button.Resources>
            </Button>

        </Grid>

        <Border
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            MinWidth="200"
            Background="{StaticResource Background3(Solid)}">




            <Border.Style>

                <Style TargetType="{x:Type Border}">

                    <Setter Property="CornerRadius" Value="0 15 15 0" />

                    <Setter Property="HorizontalAlignment" Value="Left" />

                    <Style.Triggers>

                        <DataTrigger Binding="{Binding CurrentServerStore.CurrentServer, Converter={StaticResource IsCurrentServerNullConveter}}" Value="False">

                            <Setter Property="CornerRadius" Value="0 0 15 0" />

                            <Setter Property="HorizontalAlignment" Value="Stretch" />

                        </DataTrigger>

                    </Style.Triggers>
                </Style>

            </Border.Style>

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal">

                    <Border
                        Width="40"
                        Height="40"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Background="{DynamicResource Background4(Solid)}"
                        BorderBrush="{DynamicResource Fonts(Solid)}"
                        BorderThickness="1"
                        ClipToBounds="True"
                        CornerRadius="20">

                        <Viewbox Width="25" Height="25">
                            <Path
                                Fill="{DynamicResource Fonts(Solid)}"
                                Stretch="Uniform"
                                Style="{DynamicResource Person}" />
                        </Viewbox>


                    </Border>

                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center">

                        <TextBlock.Style>

                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">

                                <Setter Property="Text" Value="{Binding AccountStore.CurrentAccount.Login}" />


                                <Style.Triggers>

                                    <DataTrigger Binding="{Binding CurrentServerStore.CurrentServer, Converter={StaticResource IsCurrentServerNullConveter}}" Value="False">

                                        <Setter Property="Text" Value="{Binding ServerAccountStore.CurrentAccount.Login}" />

                                        <Setter Property="Foreground" Value="{DynamicResource Important(Solid)}" />

                                    </DataTrigger>

                                </Style.Triggers>

                            </Style>
                        </TextBlock.Style>

                    </TextBlock>


                    <TextBlock
                        Margin="5,5,0,0"
                        VerticalAlignment="Top"
                        FontSize="10"
                        Foreground="{DynamicResource Dangerous(Solid)}"
                        Text="[NA]"
                        ToolTip="Non authoized User">



                        <TextBlock.Style>

                            <Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="{x:Type TextBlock}">

                                <Setter Property="Visibility" Value="{Binding ServerAccountStore.CurrentAccount.IsAuthorise, Converter={StaticResource NonAuthVisibilityConverter}}" />

                                <Style.Triggers>

                                    <DataTrigger Binding="{Binding CurrentServerStore.CurrentServer, Converter={StaticResource IsCurrentServerNullConveter}}" Value="True">

                                        <Setter Property="Visibility" Value="{Binding AccountStore.CurrentAccount.IsAuthorise, Converter={StaticResource NonAuthVisibilityConverter}}" />

                                    </DataTrigger>
                                </Style.Triggers>

                            </Style>
                        </TextBlock.Style>



                    </TextBlock>





                </StackPanel>

                <Button
                    Grid.Column="1"
                    Width="25"
                    Height="25"
                    Margin="0,0,5,0"
                    HorizontalAlignment="Right"
                    Command="{Binding OpenSettingsCommand}"
                    CommandParameter="1"
                    Style="{DynamicResource IMGButton}"
                    ToolTip="Create new group">
                    <Button.Resources>
                        <StaticResource x:Key="Img" ResourceKey="Settings" />
                    </Button.Resources>

                </Button>
            </Grid>





        </Border>

        <ContentControl
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="3"
            Content="{Binding selectedViewModel}">

            <ContentControl.Resources>
                <DataTemplate DataType="{x:Type viewModel:ServerVMD}">
                    <pages:ServerPV />
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>

        <!--  IsOpen="{Binding ModalStatus, UpdateSourceTrigger=PropertyChanged}"  -->
        <modalCutom:ModalCustom
            Grid.RowSpan="2"
            Grid.ColumnSpan="3"
            IsOpen="{Binding ModalStatus, UpdateSourceTrigger=PropertyChanged}">

            <Grid
                MinWidth="200"
                MinHeight="180"
                Background="{DynamicResource Background2(Solid)}">

                <Grid.RowDefinitions>
                    <RowDefinition Height="0.15*" />
                    <RowDefinition Height="0.1*" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="0.1*" />
                    <RowDefinition Height="0.1*" />
                </Grid.RowDefinitions>


                <TextBlock
                    Grid.Row="0"
                    HorizontalAlignment="Center"
                    Style="{DynamicResource Bigtext}"
                    Text="CONNECT" />

                <TextBox
                    x:Name="Iptb"
                    Grid.Row="1"
                    Margin="5"
                    MaxLength="20"
                    Style="{StaticResource LogPassTextBox}"
                    Text="{Binding ServernameOrIp, UpdateSourceTrigger=PropertyChanged}">

                    <TextBox.Resources>
                        <StaticResource x:Key="BackText" ResourceKey="tittleOrIpText" />
                    </TextBox.Resources>

                </TextBox>

                <StackPanel
                    Grid.Row="2"
                    Margin="15,0,15,0"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Orientation="Horizontal">

                    <CheckBox
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        IsChecked="{Binding CheckStatus, UpdateSourceTrigger=PropertyChanged}" />

                    <TextBlock Margin="5,0,0,0" VerticalAlignment="Center">
                        Join by ip
                    </TextBlock>

                </StackPanel>

                <Grid Row="3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button
                        MinHeight="35"
                        MaxWidth="125"
                        MaxHeight="40"
                        Margin="5"
                        VerticalAlignment="Top"
                        BorderBrush="{DynamicResource Green(Solid)}"
                        Command="{Binding ConnectServerCommand}">
                        <TextBlock Text="OK" />
                    </Button>

                    <Button
                        Grid.Column="1"
                        MinHeight="35"
                        MaxWidth="125"
                        MaxHeight="40"
                        Margin="5"
                        VerticalAlignment="Top"
                        BorderBrush="{DynamicResource Dangerous(Solid)}"
                        Command="{Binding OpenModalCommaCommand}"
                        CommandParameter="0">
                        <TextBlock Text="EXIT" />
                    </Button>
                </Grid>

                <!--  Показывает статус загрузки  -->
                <loadingCustom:LoadingCustom
                    Grid.Row="4"
                    Margin="5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Top"
                    Diameter="20"
                    IsLoading="{Binding HasStatusMessage}"
                    MainText="{Binding StatusMessage}"
                    Color="{DynamicResource Fonts(Solid)}" />

            </Grid>

        </modalCutom:ModalCustom>

    </Grid>
</UserControl>

<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:LiteCall.Infrastructure.Converters">

    <!--  Текстбоксы  -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="MaxLength" Value="15" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource Fonts(Solid)}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontFamily" Value="{DynamicResource OswaldRegular}" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />

        <Style.Triggers>

            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Foreground" Value="White" />
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Text" Value=" " />
            </Trigger>

        </Style.Triggers>
    </Style>


    <!--  Важные  -->
    <Style
        x:Key="BigTextBox"
        BasedOn="{StaticResource {x:Type TextBox}}"
        TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontFamily" Value="{DynamicResource OswaldBold}" />

    </Style>






    <!--  Логин и пароль на странице авторизации  -->
    <Style
        x:Key="LogPassTextBox"
        BasedOn="{StaticResource BigTextBox}"
        TargetType="{x:Type TextBox}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Grid>

                        <Border
                            VerticalAlignment="Bottom"
                            Background="Transparent"
                            BorderBrush="{DynamicResource Fonts(Solid)}"
                            BorderThickness="1"
                            IsHitTestVisible="False" />

                        <TextBlock
                            x:Name="Block"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            FontSize="20"
                            Text="{DynamicResource ResourceKey=BackText}"
                            Visibility="Collapsed" />

                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">

                            <Setter TargetName="Block" Property="Visibility" Value="Visible" />

                        </DataTrigger>
                    </ControlTemplate.Triggers>



                </ControlTemplate>
            </Setter.Value>
        </Setter>


        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>

                        <Border
                            VerticalAlignment="Bottom"
                            Background="Transparent"
                            BorderBrush="{DynamicResource Dangerous(Solid)}"
                            BorderThickness="1"
                            IsHitTestVisible="False" />

                        <AdornedElementPlaceholder x:Name="placeholder" />

                        <Popup
                            HorizontalAlignment="Right"
                            AllowsTransparency="True"
                            HorizontalOffset="0"
                            IsOpen="{Binding ElementName=placeholder, Path=AdornedElement.IsFocused, Mode=OneWay}"
                            Placement="Right"
                            VerticalOffset="0">
                            <StackPanel Orientation="Horizontal">

                                <Polygon
                                    VerticalAlignment="Center"
                                    Fill="{StaticResource Dangerous(Solid)}"
                                    Points="0,4 4,0 4,8"
                                    Stretch="Fill"
                                    Stroke="{StaticResource Dangerous(Solid)}"
                                    StrokeThickness="2" />

                                <Border
                                    Padding="4"
                                    Background="{StaticResource Dangerous(Solid)}"
                                    CornerRadius="4">

                                    <TextBlock
                                        HorizontalAlignment="Center"
                                        FontSize="16"
                                        FontWeight="Bold"
                                        Foreground="White"
                                        Text="{Binding ElementName=placeholder, Path=AdornedElement.ToolTip, Mode=OneWay}" />
                                </Border>

                            </StackPanel>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors).CurrentItem.ErrorContent}" />
            </Trigger>

        </Style.Triggers>

    </Style>


    <!--  Текстбокс со звездочками для скрытия пароля  -->
    <Style
        x:Key="PassTextBox"
        BasedOn="{StaticResource LogPassTextBox}"
        TargetType="{x:Type TextBox}">

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">

                    <Grid>

                        <Border
                            VerticalAlignment="Bottom"
                            Background="Transparent"
                            BorderBrush="{DynamicResource Fonts(Solid)}"
                            BorderThickness="1"
                            IsHitTestVisible="False" />

                        <TextBlock
                            x:Name="Block"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Bottom"
                            FontSize="20"
                            Text="{DynamicResource ResourceKey=BackText}"
                            Visibility="Collapsed" />

                        <ScrollViewer x:Name="PART_ContentHost" Margin="0" />



                    </Grid>

                    <ControlTemplate.Triggers>



                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">

                            <Setter TargetName="Block" Property="Text" Value="{DynamicResource ResourceKey=BackText}" />
                            <Setter TargetName="Block" Property="Visibility" Value="Visible" />

                        </DataTrigger>

                        <MultiDataTrigger>

                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text, Converter={x:Static converters:IsHighterConverter.Instance}, ConverterParameter=Text}" Value="True" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsFocused}" Value="False" />
                            </MultiDataTrigger.Conditions>

                            <Setter TargetName="Block" Property="Text" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Path=Text, Converter={x:Static converters:StringToStarConverter.Instance}, ConverterParameter=Text}" />
                            <Setter TargetName="Block" Property="Visibility" Value="Visible" />
                            <Setter Property="Foreground" Value="Transparent" />


                        </MultiDataTrigger>


                    </ControlTemplate.Triggers>



                </ControlTemplate>
            </Setter.Value>
        </Setter>


    </Style>


</ResourceDictionary>